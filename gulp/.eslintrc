{
	// 环境定义了预定义的全局变量。
    "env": {
        //环境定义了预定义的全局变量。更多在官网查看
        "browser": true,
        "node": true,
        "commonjs": true,
        "amd": true,
        "es6":true,
        "mocha":true
    },
	/**
     *  "off" 或 0 - 关闭规则
     *  "warn" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出),
     *  "error" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)
     */
    "rules": {
    	////////////////
        // 可能的错误  //
        ////////////////
        "no-cond-assign": 2,								// 禁止条件表达式中出现赋值操作符
    	"no-console": 1,									// 禁用 console
        "no-constant-condition": 2,							// 禁止在条件中使用常量表达式
        "no-control-regex": 2,								// 禁止在正则表达式中使用控制字符 ：new RegExp("\x1f")
    	"no-debugger": 2,									// 禁用 debugger
    	"no-dupe-args":2,									// 禁止 function 定义中出现重名参数
    	"no-dupe-keys":2,									// 禁止对象字面量中出现重复的 key
    	"no-duplicate-case":2,								// 禁止出现重复的 case 标签
    	"no-empty-character-class":2,						// 禁止在正则表达式中使用空字符集
    	"no-empty":[2,{"allowEmptyCatch": true }],			// 禁止出现空语句块
    	"no-ex-assign":2,									// 禁止对 catch 子句的参数重新赋值
    	"no-extra-boolean-cast":2,							// 禁止不必要的布尔转换
    	"no-extra-semi": 1,									// 禁止不必要的分号
    	"no-func-assign": 2,								// 禁止对 function 声明重新赋值
    	"no-inner-declarations": [1, "functions"],			// 禁止在嵌套的块中出现 function 或 var 声明
        "no-invalid-regexp": [2,{ "allowConstructorFlags": ["u", "y"] }],	// 禁止 RegExp 构造函数中无效的正则表达式字符串
        //"no-irregular-whitespace": 0,						// 禁止在字符串和注释之外不规则的空白
        "no-obj-calls": 2,									// 禁止把全局对象 (Math 和 JSON) 作为函数调用  错误：var math = Math();
        //"no-prototype-builtins":0,						// 禁止直接使用 Object.prototypes 的内置属性
        "no-regex-spaces": 2,								// 禁止正则表达式字面量中出现多个空格
        "no-sparse-arrays": 2,								// 禁用稀疏数组,也就是逗号之前没有任何元素的数组
        "no-unexpected-multiline": 2,						// 禁止出现令人困惑的多行表达式
        "no-unreachable": 2,								// 禁止在return、throw、continue 和 break语句之后出现不可达代码
        "no-unsafe-finally": 2,								// 禁止在 finally 语句块中出现 return、throw、break 和 continue 语句
        "use-isnan": 2,										// 要求使用 isNaN() 检查 NaN
        //"valid-jsdoc": 1,									// 强制使用有效的 JSDoc 注释
        "valid-typeof": 2,									// 强制 typeof 表达式与有效的字符串进行比较 typeof foo === "undefimed" 错误

        //////////////
        // 最佳实践 //
        //////////////
        "accessor-pairs": 2,								// 强制 getter 和 setter 在对象中成对出现
        "curly": [2, "multi-line"],							// 强制所有控制语句使用一致的括号风格
        "default-case": 2,									// switch 语句强制 default 分支，也可添加 // no default 注释取消此次警告
        "dot-location": [2, "property"],					// 强制在点号之前和之后一致的换行 1、property，'.'号应与属性在同一行2、object, '.' 号应与对象名在同一行
        "dot-notation": [2, { "allowKeywords": false }],	// 强制尽可能地使用点号取属性
        //"eqeqeq": [1, "smart"],							// 使用 === 替代 == allow-null允许null和undefined==
        //"guard-for-in": 2,								// 要求 for-in 循环中有一个 if 语句
        "no-caller": 2,										// 禁用 arguments.caller 或 arguments.callee
        "no-case-declarations":2,							// 不允许在 case 子句中使用词法声明(为了保证词法声明语句只在当前 case 语句中有效，将你子句包裹在块中)
        "no-div-regex": 2,									// 禁止除法操作符显式的出现在正则表达式开始的位置
        "no-empty-function":1,								// 禁止出现空函数.如果一个函数包含了一条注释，它将不会被认为有问题。
        "no-empty-pattern":2,								// 禁止使用空解构模式no-empty-pattern
        "no-eq-null": 1,									// 禁止在没有类型检查操作符的情况下与 null 进行比较
//        "no-eval": 2,										// 禁用 eval()
        //"no-extend-native": 2,							// 禁止扩展原生类型
        "no-extra-bind": 2,									// 禁止不必要的 .bind() 调用
        "no-fallthrough": 2,								// 禁止 case 语句落空
        "no-floating-decimal": 2,							// 禁止数字字面量中使用前导和末尾小数点
        "no-implied-eval": 2,								// 禁止使用类似 eval() 的方法
        //"no-invalid-this":2,								// 禁止 this 关键字出现在类和类对象之外
        "no-iterator": 2,									// 禁用 __iterator__ 属性
        "no-labels": 2,										//  禁用标签语句
        "no-lone-blocks": 2,								// 禁用不必要的嵌套块
        //"no-loop-func":1,									// 禁止在循环中出现 function 声明和表达式
        //"no-multi-spaces": 1,								// 禁止使用多个空格
        "no-multi-str": 2,									// 禁止使用多行字符串，在 JavaScript 中，可以在新行之前使用斜线创建多行字符串
        "no-new-wrappers": 2,								// 禁止对 String，Number 和 Boolean 使用 new 操作符
        "no-new": 2,										// 禁止在非赋值或条件语句中使用 new 操作符
        "no-octal": 2,										// 禁用八进制字面量
        "no-octal-escape": 2,								// 禁止在字符串中使用八进制转义序列
        //"no-param-reassign": 1,							// 不允许对 function 的参数进行重新赋值
        "no-proto": 2,										// 禁用 __proto__ 属性
        "no-redeclare": 2,									// 禁止使用 var 多次声明同一变量
        //"no-return-assign": 1,							// 禁止在 return 语句中使用赋值语句
        "no-script-url": 2,									// 禁止使用 javascript: url
        "no-self-assign":2,									// 禁止自我赋值
        "no-self-compare": 2,								// 禁止自身比较
        "no-sequences": 2,									// 禁用逗号操作符
        "no-throw-literal": 2,								// 禁止抛出非异常字面量
        "no-unmodified-loop-condition":2,					// 禁用一成不变的循环条件
        "no-unused-labels":2,								// 禁用未使用过的标签
        "no-useless-call":2,								// 禁止不必要的 .call() 和 .apply()
        "no-useless-concat":1,								// 禁止不必要的字符串字面量或模板字面量的连接
        //"no-useless-escape":1,							// 禁用不必要的转义字符
        "no-void": 1,										// 禁用 void 操作符
        "no-warning-comments": 1,							// 禁止在注释中使用特定的警告术语
        "no-with": 2,										// 禁用 with 语句
        //"radix": 2,										// 强制在parseInt()使用基数参数
        //"vars-on-top": 1,									// 要求所有的 var 声明出现在它们所在的作用域顶部
        "wrap-iife": [2, "any"],							// 要求 IIFE 使用括号括起来
        "yoda": [2, "never"],								// 要求或禁止 “Yoda” 条件

        //////////////
        //  变量声明 //
        //////////////
        "no-delete-var": 2,									// 禁止删除变量
        "no-label-var": 2,									// 不允许标签与变量同名
        "no-shadow-restricted-names": 2,					// 禁止覆盖受限制的标识符
//        "no-undef": 1,									// 禁用未声明的变量，除非它们在 /*global */ 注释中被提到
        "no-undef-init": 2,									// 禁止将变量初始化为 undefined
        //"no-undefined": 1,								// 禁止将 undefined 作为标识符
        "no-unused-vars": [2, { "vars": "all", "args": "none" }],	// 禁止出现未使用过的变量
        //"no-use-before-define": 0,						// 不允许在变量定义之前使用它们

        //////////////
        // 风格指南  //
        //////////////
        "comma-dangle": [2, "never"],						// 数组和对象键值对最后一个逗号， never参数：不能带末尾的逗号, always参数：必须带末尾的逗号，
        													// always-multiline：多行模式必须带逗号，单行模式不能带逗号
        //"comma-spacing": [1, { "before": false, "after": true }],	// 控制逗号前后的空格
        "comma-style": [2, "last"],							// 控制逗号在行尾出现还是在行首出现 (默认行尾)
        "computed-property-spacing": [2, "never"],			// 以方括号取对象属性时，[ 后面和 ] 前面是否需要空格, 可选参数 never, always
        "new-parens": 2,									// 要求调用无参构造函数时有圆括号
        "no-array-constructor": 2,							// 禁止使用 Array 构造函数
        "no-unneeded-ternary": 2,							// 禁止可以在有更简单的可替代的表达式时使用三元操作符
//        "semi": [1, "always"],							// 要求或禁止使用分号而不是 ASI（这个才是控制行尾部分号的，）
		"no-whitespace-before-property":1					// 禁止属性前有空白
    }
}